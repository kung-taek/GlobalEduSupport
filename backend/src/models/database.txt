CREATE DATABASE AWS_DB;
USE AWS_DB;


-- 1. 회원 시스템
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50),
  email VARCHAR(100),
  password VARCHAR(255),
  provider VARCHAR(50),
  google_id VARCHAR(100),
  locale VARCHAR(10),
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  level INT DEFAULT 1, -- 레벨
  exp INT DEFAULT 0 -- 경험치
);

✅ 주요 포인트 요약:
email은 UNIQUE이며 NOT NULL

provider는 기본값이 'local'인 ENUM

password는 로컬 가입자만 필수

google_id는 구글 로그인 전용으로 사용

created_at, updated_at 자동 타임스탬프 관리 

--------------------------------------------
-- 2. 번역 시스템
CREATE TABLE ui_texts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    page_name VARCHAR(100) NOT NULL,         -- 페이지 이름 (예: "main", "map")
    element_key VARCHAR(100) NOT NULL,        -- 텍스트 키 (예: "gptMessageSend")
    original_text_ko TEXT NOT NULL,          
    translated_text_en TEXT               
);
----------------------------------------------
-- 3. 레벨 테이블
CREATE TABLE user_levels (
  level INT PRIMARY KEY,
  required_exp INT NOT NULL,
  title VARCHAR(50)
);

-- 안에 들어있는 값

INSERT INTO user_levels (level, required_exp, title)
VALUES 
(1, 0, '유학생Lv1'),
(2, 50, '유학생Lv2'),
(3, 100, '유학생Lv3'),
(4, 150, '유학생Lv4'),
(5, 200, '유학생Lv5'),
(6, 250, '현지인Lv1'),
(7, 300, '현지인Lv2'),
(8, 350, '현지인Lv3'),
(9, 400, '현지인Lv4'),
(10, 500, '한국인');

---------------------------------------------------
-- 4. 게시글 테이블

CREATE TABLE posts (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  board_type ENUM('free', 'info') NOT NULL,
  title VARCHAR(255) NOT NULL,
  content TEXT NOT NULL,
  image_url VARCHAR(255),
  views INT DEFAULT 0,
  likes INT DEFAULT 0,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id)
);

---------------------------------------------------------
-- 5. 댓글 테이블

CREATE TABLE comments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  post_id INT NOT NULL,
  user_id INT NOT NULL,
  parent_id INT DEFAULT NULL,
  content TEXT NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (post_id) REFERENCES posts(id),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (parent_id) REFERENCES comments(id)
);
